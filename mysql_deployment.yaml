apiVersion: v1
kind: PersistentVolume            # Create a PersistentVolume
metadata:
  name: mysqldb
  labels:
    type: local
spec:
  storageClassName: standard      # Storage class. A PV Claim requesting the same storageClass can be bound to this volume. 
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:                       # hostPath PersistentVolume is used for development and testing. It uses a file/directory on the Node to emulate network-attached storage
    path: "/mnt/data"
  persistentVolumeReclaimPolicy: Retain  # Retain the PersistentVolume even after PersistentVolumeClaim is deleted. The volume is considered “released”. But it is not yet available for another claim because the previous claimant’s data remains on the volume. 
---    
apiVersion: v1
kind: PersistentVolumeClaim        # Create a PersistentVolumeClaim to request a PersistentVolume storage
metadata:                          # Claim name and labels
  name: mysql-pv-claim
  labels:
    app: mysqldb
spec:                              # Access mode and resource limits
  storageClassName: standard       # Request a certain storage class
  accessModes:
    - ReadWriteOnce                # ReadWriteOnce means the volume can be mounted as read-write by a single Node
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1                    # API version
kind: Service                     # Type of kubernetes resource 
metadata:
  name: mysqldb         # Name of the resource
#  labels:                         # Labels that will be applied to the resource
#    app: mysqldb
spec:
  ports:
    - port: 3306
      protocol: TCP
      targetPort: 3306
  selector: # Selects any Pod with labels `app=mysqldb,tier=mysql`                 
     app: mysqldb
#    tier: mysql
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment                  # Type of the kubernetes resource
metadata:
  name: mysqldb           # Name of the deployment
  labels:                           # Labels applied to this deployment 
    app: mysqldb
spec:
  selector:
    matchLabels:                    # This deployment applies to the Pods matching the specified labels
      app: mysqldb
      tier: mysqldb
  strategy:
    type: Recreate
  template:                         # Template for the Pods in this deployment
    metadata:
      labels:                       # Labels to be applied to the Pods in this deployment
        app: mysqldb
        tier: mysqldb
    spec:
      hostname: mysqldb
      subdomain: mysqldb
      containers:
      - image: localhost:32000/mysqldb:registry           # The container image
        name: mysqldb
        env:                        # Environment variables passed to the container 
        - name: MYSQL_ROOT_PASSWORD 
          value: root
        - name: MYSQL_DATABASE
          value: test
        ports:
        - containerPort: 3306        # The port that the container exposes       
          name: mysqldb
        volumeMounts:
        - name: mysql-persistent-storage  # This name should match the name specified in `volumes.name`
          mountPath: /var/lib/mysql
      volumes:                       # A PersistentVolume is mounted as a volume to the Pod  
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
